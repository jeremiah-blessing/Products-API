openapi: 3.0.0
info:
  version: "1.0"
  title: "Products CRUD"
  description: "API to manage Products of your store."
servers:
  - url: "https://product-rest-api.herokuapp.com"
    description: Production Server
  - url: "http://localhost:3000"
    description: Local Server

tags:
  - name: Products
    description: Add / Edit / Get Products
paths:
  /products:
    get:
      description: Get all the Products
      tags:
        - Products
      responses:
        200:
          description: Successfull Request and all the templates are received.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductCreated"
        401:
          description: Authentication Failed.
          content:
            text/html:
              schema:
                type: string
              examples:
                one:
                  summary: No API key present in the Header
                  value: Invalid Request. No API key found in the Header.
                two:
                  summary: Invalid / Expired Key
                  value: Expired API Key.

        500:
          description: Internal Server Error.
          content:
            text/html:
              schema:
                type: string
              example: Internal Server error!

    post:
      description: Add a new post
      tags:
        - Products
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductNew"
            examples:
              Product:
                $ref: "#/components/examples/ProductNew"

      responses:
        201:
          description: Successfully added a new Product
          content:
            application/json:
              examples:
                Product:
                  $ref: "#/components/examples/ProductCreated"
        400:
          description: Missing Values or bad Schema.
          content:
            text/html:
              schema:
                type: string
              examples:
                one:
                  summary: All the required fields are not Present
                  value: "Missing Values. Required Fields : [name, price, description], Format : [name:String, price:Number, description:String, sale:Boolean, discount:Number, image:String]"
        401:
          description: Authentication Failed.
          content:
            text/html:
              schema:
                type: string
              examples:
                one:
                  summary: No API key present in the Header
                  value: Invalid Request. No API key found in the Header.
                two:
                  summary: Invalid / Expired Key
                  value: Expired API Key.

        500:
          description: Internal Server Error.
          content:
            text/html:
              schema:
                type: string
              example: Internal Server error!

  /products/{id}:
    get:
      description: Get a single Products
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: 5f57474532faea54b4bfe431
      responses:
        200:
          description: Successfull request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductCreated"
              examples:
                Product:
                  $ref: "#/components/examples/ProductCreated"
        401:
          description: Authentication Failed.
          content:
            text/html:
              schema:
                type: string
              examples:
                one:
                  summary: No API key present in the Header
                  value: Invalid Request. No API key found in the Header.
                two:
                  summary: Invalid / Expired Key
                  value: Expired API Key.
        404:
          description: Product doesn't exist.
          content:
            text/html:
              schema:
                type: string
              examples:
                Notexist:
                  summary: Product of that ID doesn't exist.
                  value: Product doesn't exist.

        500:
          description: Internal Server Error.
          content:
            text/html:
              schema:
                type: string
              example: Internal Server error!

    put:
      description: Edit a Product
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: 5f572dc42814e056a800aeaa
      requestBody:
        description: Fields that you want to edit
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductNew"
      responses:
        200:
          description: Successfull request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductCreated"
              examples:
                Product:
                  $ref: "#/components/examples/ProductCreated"
        400:
          description: Missing Values or bad Schema.
          content:
            text/html:
              schema:
                type: string
              examples:
                one:
                  summary: All the required fields are not Present
                  value: "Invalid Format. Required format : [name:String, price:Number, description:String, sale:Boolean, discount:Number, image:String]"
        401:
          description: Authentication Failed.
          content:
            text/html:
              schema:
                type: string
              examples:
                one:
                  summary: No API key present in the Header
                  value: Invalid Request. No API key found in the Header.
                two:
                  summary: Invalid / Expired Key
                  value: Expired API Key.
        404:
          description: Product doesn't exist.
          content:
            text/html:
              schema:
                type: string
              examples:
                Notexist:
                  summary: Product of that ID doesn't exist.
                  value: No Product found to update!
        500:
          description: Internal Server Error.
          content:
            text/html:
              schema:
                type: string
              example: Internal Server error!
    delete:
      description: Delete a single Product
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: 5f574724c7569555388c662c
      responses:
        200:
          description: Successfull request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: true
        401:
          description: Authentication Failed.
          content:
            text/html:
              schema:
                type: string
              examples:
                one:
                  summary: No API key present in the Header
                  value: Invalid Request. No API key found in the Header.
                two:
                  summary: Invalid / Expired Key
                  value: Expired API Key.
        404:
          description: Product doesn't exist.
          content:
            text/html:
              schema:
                type: string
              examples:
                Notexist:
                  summary: Product of that ID doesn't exist.
                  value: No Product found to delete!
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: false

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: apiKey
  schemas:
    ProductNew:
      type: object
      properties:
        name:
          type: string
          description: Name of the Product.
        price:
          type: number
          description: Price of the Product.
        sale:
          type: boolean
          description: If this product is currently on sale or not.
        discount:
          type: number
          description: Discount in percentage. If 10% discount, then 10 is the discount.
          example: 10
        description:
          type: string
          description: Short description of the product.
        image:
          type: string
          description: Image URL of the product. Make sure it's CORS enabled.
    ProductCreated:
      type: object
      properties:
        id:
          type: string
          description: Unique ID generated for a Product. Use this, to query a single product.
        name:
          type: string
          description: Name of the Product.
        price:
          type: number
          description: Price of the Product.
        sale:
          type: boolean
          description: If this product is currently on sale or not.
        discount:
          type: number
          description: Discount in percentage. If 10% discount, then 10 is the discount.
          example: 10
        description:
          type: string
          description: Short description of the product.
        image:
          type: string
          description: Image URL of the product. Make sure it's CORS enabled.
  examples:
    ProductNew:
      summary: Sample E-Book Product
      value:
        {
          name: "E-Book",
          price: 230,
          sale: true,
          discount: 10,
          description: "Buy this e-book!",
          image: "/images/4.jpg",
        }
    ProductCreated:
      summary: Sample E-Book Product
      value:
        {
          id: "5f57474532faea54b4bfe431",
          name: "E-Book",
          price: 230,
          sale: true,
          discount: 10,
          description: "Buy this e-book!",
          image: "/images/2.jpg",
        }

security:
  - ApiKeyAuth: []
